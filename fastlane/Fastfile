# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
min_fastlane_version("2.71.1")

default_platform(:ios)

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # cocoapods
    # cocoapods
  end

  private_lane :update_plists do
    sh "git fetch --tags"
    tag = last_git_tag

    increment_version_number(
      version_number: "#{tag}",      # specify specific version number (optional, omitting it increments patch version number)
      xcodeproj: "./VSTextField/VSTextField.xcodeproj"  # (optional, you must specify the path to your main Xcode project if it is not in the project root directory)
    )

    git_commit(
      message: "[Bitrise üöÄÔ∏è] Update plists to version #{get_version_number}. [skip ci]",
      path: ["./VSTextField/VSTextField.xcodeproj", "./VSTextField/*.plist"]
    )

    push_to_git_remote
  end

  desc "Runs all the tests"
  lane :test do
    run_tests(
      workspace: "VSTextField.xcworkspace",
      scheme: "VSTextFieldExampleApp",
      clean: true,
      devices: ["iPhone SE"]
    )
  end

  lane :carthage_build do
    carthage(
      command: "build",       # One of: build, bootstrap, update, archive. (default: bootstrap)
      no_skip_current: true,     # Don't skip building the current project (only for frameworks)
      verbose: false,   # Print xcodebuild output inline
      platform: "iOS",  # Define which platform to build for (one of ‚Äòall‚Äô, ‚ÄòMac‚Äô, ‚ÄòiOS‚Äô, ‚ÄòwatchOS‚Äô, ‚ÄòtvOS‚Äò, or comma-separated values of the formers except for ‚Äòall‚Äô)
      configuration: "Release",   # Build configuration to use when building
      cache_builds: true         # By default Carthage will rebuild a dependency regardless of whether its the same resolved version as before.
    )
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # sync_code_signing(type: "appstore")
    capture_screenshots
    build_app # more options available
    upload_to_app_store(force: true)
    # frame_screenshots
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://docs.fastlane.tools/advanced/#control-configuration-by-lane-and-by-platform
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics
